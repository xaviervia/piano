#!/usr/bin/env ruby

unless ARGV.empty?
  
  args = {}
  
  ARGV.each do |arg|
    if arg =~ /^\d+$/
      args[:port] = arg
    elsif arg =~ /^noetags$/
      args[:etags] = :off
    elsif arg =~ /^views:/
      matches = arg.match(/^views:(.+)$/)
      args[:views] = matches[1]
    elsif arg =~ /^public:/
      matches = arg.match(/^public:(.+)$/)
      args[:public] = matches[1]
    elsif arg =~ /^sample$/
      puts "Warning: the sample site folder files will be created in the current directory."
      puts "Any files with the same name will be overwritten."
      print "Do you want to continue? (Yn): "
      while answer = gets
        puts answer
#        if answer =~ /^Y/
#          puts "Building sample..."
#          make_sample
#          break
#        elsif answer =~ /^n/
#          puts "Exiting now"
#          Process.exit!
#        else
#          print "Couldn't understand the answer, please do it again (Yn): "
#        end
      end 
    elsif arg =~ /^[a-z]+$/
      args[:environment] = arg.to_sym
    end
  end

end

require "piano"

if args
  Piano.port = args[:port]  if args[:port]
  Piano.environment = args[:environment] if args[:environment]
  Piano.etags = args[:etags] if args[:etags]
  Piano.views = File.expand_path(Dir.pwd) + "/" +args[:views] if args[:views]
  Piano.public = File.expand_path(Dir.pwd) + "/" + args[:public] if args[:public]
end

def make_sample
  require "fileutils"
  
  source_dir = File.dirname(File.dirname(File.expand_path(__FILE__)))
  
  this_dir = File.expand_path(Dir.pwd)
  
  FileUtils.cp_r "#{source_dir}/sample", this_dir
end

if File.exists?(File.expand_path(Dir.pwd) + "/.piano")
  load File.expand_path(Dir.pwd) + "/.piano"
end

require "piano/routes"

Piano.play!